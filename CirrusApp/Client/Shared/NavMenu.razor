@inject StateContainer Container
@implements IDisposable

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">CirrusApp</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>
        @if (!Container.IsAuthenticated)
        {
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="login">
                    <span class="oi oi-account-login" aria-hidden="true"></span> Login
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="register">
                    <span class="oi oi-lightbulb" aria-hidden="true"></span> Register
                </NavLink>
            </li>
        }
        @if (Container.IsAuthenticated)
        {
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="files">
                    <span class="oi oi-file" aria-hidden="true"></span> My Files
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="/" @onclick="SignOut">
                    <span class="oi oi-eject" aria-hidden="true"></span> Sign Out
                </NavLink>
            </li>
        }
    </ul>
</div>

@code {

    protected override void OnInitialized()
    {
        Container.onChange += StateHasChanged;
        base.OnInitialized();
    }

    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private void SignOut()
    {
        Container.SetProperty();
    }

    public void Dispose()
    {
        Container.onChange -= StateHasChanged;
    }
}
